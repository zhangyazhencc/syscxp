
DELIMITER $$

USE `syscxp_billing`$$

DROP PROCEDURE IF EXISTS `generateOrder4diskOfEcp`$$

CREATE
    /*[DEFINER = { user | CURRENT_USER }]*/
    PROCEDURE `syscxp_billing`.`generateOrder4diskOfEcp`()

    BEGIN
     DECLARE exitFlag INT DEFAULT 1;
     DECLARE pd VARCHAR(32);
     DECLARE exd TIMESTAMP;
     DECLARE acUuid VARCHAR(64);
     DECLARE pn VARCHAR(255);
     DECLARE ina VARCHAR(255);
     DECLARE did VARCHAR(32);
     DECLARE description VARCHAR(511);
     DECLARE priceInfo VARCHAR(511);
     DECLARE totpri  DECIMAL(12,4) DEFAULT 0;
     DECLARE pri INT;
     DECLARE cona VARCHAR(128);

     DECLARE generateOrder CURSOR FOR SELECT v.`uuid`,v.`name`,v.`expireDate`,a.`accountUuid`,d.`name`,d.`uuid` FROM zstack.`VolumeEO` v
INNER JOIN zstack.`AccountResourceRefVO` a ON a.`resourceUuid` = v.`uuid`
INNER JOIN zstack.`DiskOfferingEO` d ON d.`uuid` = v.`diskOfferingUuid`
 AND a.`resourceType` ='VolumeVO' AND v.`rootImageUuid` IS NULL;

     DECLARE EXIT HANDLER FOR NOT FOUND SET exitFlag:=0;
     OPEN generateOrder;
	 REPEAT
     FETCH generateOrder INTO pd,pn,exd,acUuid,ina,did;
     SELECT unitPrice,configName INTO pri,cona FROM syscxp_billing.`ProductPriceUnitVO` WHERE productCategoryUuid = 'DISK' AND areaCode = 'DEFAULT' AND lineCode='DEFAULT' AND configCode=did;
     SET totpri = pri;
     SET description=CONCAT_WS('',CONCAT_WS('','{"datas":[{"name":"磁盘容量","value":"',ina),'"}]}');
     SET priceInfo ='[{"configName":"';
     SET priceInfo = CONCAT_WS('',CONCAT_WS('',CONCAT_WS('',CONCAT_WS('',CONCAT_WS('',CONCAT_WS('', priceInfo, ina),'","originalPrice":'),pri),',"realPayPrice":'),pri),',"discount":100}]');
     SET totpri = totpri*6;
      INSERT INTO syscxp_billing.`OrderVO` VALUES(
         REPLACE(UUID(),'-',''),
         'BUY',
         CURRENT_TIMESTAMP(),
         'PAID',
         totpri,
         totpri,
         totpri,
         0,
         acUuid,
         CURRENT_TIMESTAMP(),
         exd,
         CURRENT_TIMESTAMP(),
         CURRENT_TIMESTAMP(),
         pd,
         pn,
         'DISK',
         description,
         'BY_MONTH',
         6,
         1,
         '{"com.syscxp.header.tunnel.billingCallBack.CreateTunnelCallBack":{}}',
         priceInfo,
         0
         );

     INSERT INTO syscxp_billing.`RenewVO` VALUES(
           REPLACE(UUID(),'-',''),
           acUuid,
           1,
           pd,
           pn ,
           'DISK',
            description,
            'BY_MONTH',
            CURRENT_TIMESTAMP(),
            CURRENT_TIMESTAMP(),
            totpri,
            exd,
            totpri
     );

     UNTIL exitFlag=0 END REPEAT;
     CLOSE generateOrder;


    END$$

DELIMITER ;

 